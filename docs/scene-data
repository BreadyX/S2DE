The files inside the data/scenes directory are read by S2DE and parsed into
Scenes. They have to be well-formed YAML files.

Every file may contain data for only one scene. The file name can be whatever as
long as it ends with the '.yaml' extension.

The structure of each file is very strict: it is a sequence of GameObject data.
GameObject data consists in a dictionary and has to have these keys and the
matching types:
- 'name' (str)
- 'spawn' (bool)
- 'components' (sequence)

Each item of 'components' is a dictionary and it has to have at least the 'type'
key containing the python object tag corresponding to the desired Component or
Behaviour. An example of an object tag is: '!!python/name:components.Transform'.
The other keys are the arguments that will be passed to the construct of the
Component/Behaviour.

Every GameObject has to have at least one component and one of them should be a
Transform. The lack of a Transform is, however, not punished but can break other
components that may assume its presence.

Example scene file:
---
- name: 'TestGameObject 1'
  spawn: true
  components:
    - type: !!python/name:components.Transform
      absolute: true
      x: 0
      y: 0
    - type: !!python/name:behaviours.SomeBehaviour
      argument1: 'value1'
    - type: !!python/name:components.SomeComponent

# Comments are supported
- name: 'TestGameObject 2'
  spawn: true
  components:
    - type: !!python/name:components.Transform
      parent: 'TestGameObject 1'
      absolute: false
      x: 10
      y: 10
